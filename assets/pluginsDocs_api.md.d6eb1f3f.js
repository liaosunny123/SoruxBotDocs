import{_ as e,c as a,o as t,a as i}from"./app.a5da328c.js";const P=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[{"level":3,"title":"通用API","slug":"通用api","link":"#通用api","children":[]},{"level":3,"title":"FutureTest-APi","slug":"futuretest-api","link":"#futuretest-api","children":[]}]},{"level":2,"title":"执行方式","slug":"执行方式","link":"#执行方式","children":[{"level":3,"title":"管道执行","slug":"管道执行","link":"#管道执行","children":[]},{"level":3,"title":"异步执行","slug":"异步执行","link":"#异步执行","children":[]},{"level":3,"title":"同步执行","slug":"同步执行","link":"#同步执行","children":[]}]}],"relativePath":"pluginsDocs/api.md"}'),r={name:"pluginsDocs/api.md"},l=i('<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h1><p>SoruxBot 框架的API分为两种类型，三种执行方式。</p><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-hidden="true">#</a></h2><h3 id="通用api" tabindex="-1">通用API <a class="header-anchor" href="#通用api" aria-hidden="true">#</a></h3><p>通用API表示框架支持的统一API，可以通过此API与任何平台交互。</p><p>API的参数和返回值规定在Interface中有详细说明</p><h3 id="futuretest-api" tabindex="-1">FutureTest-APi <a class="header-anchor" href="#futuretest-api" aria-hidden="true">#</a></h3><p>表示协议层实体支持的额外API，可以通过此平台与特定的平台交互</p><h2 id="执行方式" tabindex="-1">执行方式 <a class="header-anchor" href="#执行方式" aria-hidden="true">#</a></h2><h3 id="管道执行" tabindex="-1">管道执行 <a class="header-anchor" href="#管道执行" aria-hidden="true">#</a></h3><p>消息通过SoruxBot管道进行执行，消息的具体处理时间对于插件来说是未知的，其返回值也是未知的。一旦采用本方法执行API，那么意味着插件主动放弃方法的返回值。</p><p>例如机器人只需要发送某个事件结果的返回信息，例如机器人只需要对于平台的Fuction事件做回复，那么请走本通道。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>管道执行对于框架的执行是友好的，倘若机器人负载的服务器性能受限且消息数量无限大，这依旧不会影响整个框架的运行流程和插件的执行，只不过在外界看来消息会有延迟（管道依次推送消息）。</p></div><h3 id="异步执行" tabindex="-1">异步执行 <a class="header-anchor" href="#异步执行" aria-hidden="true">#</a></h3><p>消息通过SoruxBot直连管道进行，框架会为插件开辟额外的线程进行处理，且处理不影响插件的执行逻辑，且消息返回值在得到后传入插件。</p><p>例如机器人通过API下载某些群文件等网络I/O的耗时行为，请走本通道</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>异步执行对于插件的执行是友好的，倘若机器人请求的API返回的时间足够大，这依旧不会影响插件Action的执行。</p></div><h3 id="同步执行" tabindex="-1">同步执行 <a class="header-anchor" href="#同步执行" aria-hidden="true">#</a></h3><p>消息通过SoruxBot直连管道进行，框架不会为插件开辟额外的线程进行处理，且处理会阻塞插件的运行，且消息返回值在得到后作为API的返回值被插件立刻使用。</p><p>例如机器人需要通过API判断某些特定的情况以执行不同的插件逻辑，请走本通道</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>同步执行对于Action的逻辑分支执行是友好的，倘若机器人请求的API返回的时间足够小，且需要及时使用返回值，那么同步执行会较好的适应插件的开发逻辑。</p></div>',21),s=[l];function c(d,n,p,h,o,u){return t(),a("div",null,s)}const A=e(r,[["render",c]]);export{P as __pageData,A as default};
