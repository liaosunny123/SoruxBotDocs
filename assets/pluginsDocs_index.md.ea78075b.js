import{_ as s,c as a,o as n,a as l}from"./app.a5da328c.js";const A=JSON.parse('{"title":"SoruxBot 插件概述","description":"","frontmatter":{},"headers":[{"level":2,"title":"基于C#接入开发","slug":"基于c-接入开发","link":"#基于c-接入开发","children":[{"level":3,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":3,"title":"创建项目结构","slug":"创建项目结构","link":"#创建项目结构","children":[]}]},{"level":2,"title":"基于其它语言接入开发","slug":"基于其它语言接入开发","link":"#基于其它语言接入开发","children":[]}],"relativePath":"pluginsDocs/index.md"}'),o={name:"pluginsDocs/index.md"},p=l(`<h1 id="soruxbot-插件概述" tabindex="-1">SoruxBot 插件概述 <a class="header-anchor" href="#soruxbot-插件概述" aria-hidden="true">#</a></h1><p>SoruxBot 插件开发有两种模式：</p><ul><li>基于框架使用C#接入开发</li><li>基于框架扩展使用第三方语言进行开发</li></ul><p>SoruxBot插件的目录结构：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Plugins</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">##表示Wrapper下插件的存储/运行/配置的目录</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Bin</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">##表示插件的存储目录</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">##表示插件的配置目录</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Data</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">##表示插件的数据目录</span></span>
<span class="line"></span></code></pre></div><h2 id="基于c-接入开发" tabindex="-1">基于C#接入开发 <a class="header-anchor" href="#基于c-接入开发" aria-hidden="true">#</a></h2><p>你也可以在此处查看一个插件的完整开发流程：<a href="/SoruxBotDocs/pluginsDocs/example/">Example</a></p><h3 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-hidden="true">#</a></h3><ul><li>下载<a href="https://www.github.com/liaosunny123/soruxbot" target="_blank" rel="noreferrer">SoruxBot.Interface</a>的源码</li><li>建立你的工作区，并将SoruxBot.Interface添加到你的解决方案中</li><li>创建你的项目，并选型为C#类库</li></ul><h3 id="创建项目结构" tabindex="-1">创建项目结构 <a class="header-anchor" href="#创建项目结构" aria-hidden="true">#</a></h3><p>插件应当包含一个Register类作为向框架注册信息的类，和多个请求事件的Controller类。</p><h4 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-hidden="true">#</a></h4><p>在Register类中，通过引入命名空间<code>using Sorux.Framework.Bot.Core.Interface.PluginsSDK.Register</code>并使类至少继承一个<code>IBasicInformationRegister</code>接口</p><p>你的代码可能是这个样子：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Sorux.Framework.Bot.Core.Interface.PluginsSDK.Register</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Register</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IBasicInformationRegister</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetAuthor</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SoruxBot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetDescription</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SoruxBot框架调试插件</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SoruxBotDebugHelper</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetVersion</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0-release</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetDLL</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">soruxbot.pluginshelper.debughelper.dll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>插件通过继承Interface.Register命名空间下的若干接口来向框架注册对应的服务，以下是这些接口的具体含义：</p><ul><li>IBasicInformationRegister:必须继承，表示注册插件的基本信息</li><li>ICommandPermission:可选继承，表示是否请求权限托管服务，继承后可以使用权限管理特性</li><li>IPluginsUUIDRegister:可选继承，表示插件是否向SoruxBot插件市场注册，并提供UUID</li></ul><p>对于Register可选的接口，可详见<a href="/SoruxBotDocs/pluginsDocs/register/">Register</a>页</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>不经过继承对应的接口表明插件特性，可能会导致在使用接口提供的特性的时候出现无法预知的错误</p></div><h4 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-hidden="true">#</a></h4><p>在Controller类中： Controller类表示插件的控制类，表示插件某个命令集的类。在每一个Controller中应该尽可能的包含某类功能的全部命令。</p><p>Controller类并没有明确的命令或者是位置规范，你只需要继承<code>BotController</code>父类即可向框架表明这是一个Controller类</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>最佳实践：Controller类虽然没有明确的限制，但是建议在开发时每个功能模块自成一个Controller</p></div><h5 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-hidden="true">#</a></h5><p>Controller构造函数中可以使用Interface中提供的参数，以下有：</p><ul><li>ILoggerService:日志模块</li><li>IBasicAPI:API实例</li><li>BotContext:机器人上下文模块【部分安全模式下框架可能不允许插件获取此实例】</li><li>ILongMessageCommunicate:长对话支持模块</li><li>IPluginsDataStorage:插件配置持久化模块</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>最佳实践：Controller类一般需要获取日志模块进行信息输出和API实例进行消息输出</p></div><h5 id="action" tabindex="-1">Action <a class="header-anchor" href="#action" aria-hidden="true">#</a></h5><p>以一段代码为例：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Event</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">EventType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SoloMessage</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Command</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CommandAttribute</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Prefix</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">None</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">debug [state]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginFucFlag</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MessageContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">state</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">       </span></span>
<span class="line"><span style="color:#A6ACCD;">	    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendPrivateMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debug Mode on</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> PluginFucFlag</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgIntercepted</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendPrivateMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debug Mode off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> PluginFucFlag</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgIntercepted</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendPrivateMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error State,only be on/off but receive:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> state</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> PluginFucFlag</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgIntercepted</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Action分为特性标记，处理内容和返回三部分。</p><ul><li>特性标记：见<a href="/SoruxBotDocs/pluginsDocs/attribute/">特性页</a></li><li>处理内容：实现你的逻辑，可见<a href="./api.html">API页</a></li><li>返回：返回消息的状态，见<a href="./returnType.html">返回页</a></li></ul><h4 id="json" tabindex="-1">Json <a class="header-anchor" href="#json" aria-hidden="true">#</a></h4><p>插件需要有一个 Json 文件来向插件提供用户可以根据实际情况自行更改的配置项。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>这并不是说明插件需要把初始化配置项写在此处，此Json文件旨在对插件进行说明，如果你需要配置用户可以修改的插件信息，那么也请写在这个地方，因为插件向框架申请的存储是被框架加密的。</p></div><p>Json文件应当被放置在Config下，且与插件名称相同，例如对于A.dll，他需要有A.json的配置文件。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>由于框架可以跨平台运行，所以请注意文件名的细节。在Linux平台中，操作系统对于文件名的大小写有严格的识别。因此可能出现你插件配置文件在Windows下可以运行，但在Linux下不可以，所以请严格控制大小写。</p></div><p>Json文件中的详细配置请见<a href="./json.html">Json页</a></p><p>至此便是一个插件的基本构造，此外，你还可以使用<a href="/SoruxBotDocs/pluginsDocs/attribute/">特性页</a>高级操作。</p><h4 id="nuget限制" tabindex="-1">Nuget限制 <a class="header-anchor" href="#nuget限制" aria-hidden="true">#</a></h4><p>特别的，当插件开发过程中使用了部分外置库，而这些外置库同时被SoruxBot使用，因此部分情况下可能出现库冲突导致插件加载失败的现象，因此我们推荐你首先检查SoruxBot是否使用了你使用的外置库，并核验版本是否正确。</p><p>以下列举了SoruxBot所使用的所有外置库，一般来说SoruxBot不会轻易更改使用的Nuget库，以确保与开发者保持一致，请确保插件开发过程中使用的版本（如果存在）与下面的版本相同：</p><ul><li><code>Microsoft.Extensions.*</code>：版本为7.0.0</li><li><code>Microsoft.Extensions.Configuration.Binder</code>：版本为7.0.1</li><li><code>System.Configuration.ConfigurationManager</code>： 版本为7.0.0</li><li><code>Newtonsoft.Json.Bson</code>：版本为1.0.3-beta1</li><li><code>RestSharp</code>：版本为109.0.0-preview.1</li><li><code>System.Data.SQLite.Core</code>：版本为1.0.117</li></ul><p>一般情况下这些库不会与插件的开发起到冲突，且部分库在Interface也会开放部分的Utils以供插件开发者简化插件开发流程。例如，在SoruxBot中提供了供插件开发者使用的数据存储模块<code>IPluginsDataStorage</code>，其为<code>SQLite</code>模块的包装版本，那么插件开发者可以使用本模块以进行插件数据配置存储操作，而不是自己使用SQLite进行手动操作。</p><p>如有需要用到上述库，请先检查SoruxBot是否提供了相应的Utils，然后才使用版本相同的库。</p><h2 id="基于其它语言接入开发" tabindex="-1">基于其它语言接入开发 <a class="header-anchor" href="#基于其它语言接入开发" aria-hidden="true">#</a></h2><p>文档完善中...</p>`,47),e=[p];function t(r,c,D,i,C,y){return n(),a("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
