import{_ as s,c as n,o as a,a as o}from"./app.a5da328c.js";const d=JSON.parse('{"title":"Json","description":"","frontmatter":{},"headers":[{"level":2,"title":"Name","slug":"name","link":"#name","children":[]},{"level":2,"title":"Privilege","slug":"privilege","link":"#privilege","children":[]},{"level":2,"title":"PermissionNode","slug":"permissionnode","link":"#permissionnode","children":[{"level":3,"title":"ConditionType与ConditionChar的使用","slug":"conditiontype与conditionchar的使用","link":"#conditiontype与conditionchar的使用","children":[]}]},{"level":2,"title":"PermissionDefaultConfig","slug":"permissiondefaultconfig","link":"#permissiondefaultconfig","children":[]},{"level":2,"title":"再看权限节点","slug":"再看权限节点","link":"#再看权限节点","children":[]}],"relativePath":"pluginsDocs/json.md"}'),l={name:"pluginsDocs/json.md"},p=o(`<h1 id="json" tabindex="-1">Json <a class="header-anchor" href="#json" aria-hidden="true">#</a></h1><p>Json用于说明插件的信息，一般需要配置的有Name和Privilege选项：</p><p>例如：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Sorux示例插件</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Privilege</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">PermissionNode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">PermissionDefaultConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>Name:插件的名称</li><li>Privilege:插件的优先级</li><li>PermissionNode:插件的权限配置</li><li>PermissionDefaultConfig:默认权限配置</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>插件优先级不可冲突，当发送冲突时框架会主动处理冲突并提示用户，此外用户也可以更改框架处理冲突时候的行为和插件的优先级。因此不用担心插件优先级冲突。 在插件优先级冲突时，默认采用的顺序时文件读取的顺序，且后一个插件的优先级向后推1，以此类推</p></div><h2 id="name" tabindex="-1">Name <a class="header-anchor" href="#name" aria-hidden="true">#</a></h2><p>仅仅表示插件的名称，我们推荐的做法是将此处的名称，和日志输出的名称统一，以方便用户识别。</p><h2 id="privilege" tabindex="-1">Privilege <a class="header-anchor" href="#privilege" aria-hidden="true">#</a></h2><p>表示插件的优先级，优先级表示同一个触发指令下插件的执行顺序和流程，优先级数值越低，表示优先级顺序越高。高优先级的插件可以控制消息是否传递和消息的具体状态，但不可更改根消息，即除消息状态外的任何这状态。关于消息状态可见<a href="/SoruxBotDocs/pluginsDocs/returnType.html">返回值概述</a>.</p><h2 id="permissionnode" tabindex="-1">PermissionNode <a class="header-anchor" href="#permissionnode" aria-hidden="true">#</a></h2><p>是一个数组，表示插件的权限配置节点，用于配置插件Permission特性注释的Action执行条件。</p><p>例如，对于这样的一个权限节点：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Event</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">EventType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SoloMessage</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Command</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CommandAttribute</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Prefix</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Single</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echoPrivileged [msg]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Permission</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EpicMo.Example.ChatPlugins.GroupSay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginFucFlag</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EchoPrivilege</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MessageContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">,string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">msg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    _bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendPrivateMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你好，你发送的消息是</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> PluginFucFlag</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgFlag</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>对于这样的一个Action，执行的权限是<code>EpicMo.Example.ChatPlugins.GroupSay</code>，在插件执行前，框架会对消息上下文进行解析，判断触发消息的对象是否具有相应的权限。</p><p>以Json配置文件的一项配置为例：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PermissionNode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EpicMo.Example.ChatPlugins.GroupSay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在群聊中使用Saying</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">ConditionType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BasicModel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">ConditionChar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TriggerId</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EpicMo.Example.ChatPlugins.GroupBan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在群聊中禁言</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">ConditionType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BasicModel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">ConditionChar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TriggerId</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>对于PermissionNode下的每一个节点，称为<code>Node</code>，每一个<code>Node</code>应该具有如上的四个字段。</p><ul><li>Node:表示Node的具体表现，且对大小写敏感。</li><li>Description:表示Node的描述，只对框架使用者有效，相当于对Node的注释。</li><li>ConditionType:表示触发条件的消息状态，可为：BasicModel和UnderLayModel两个值。</li><li>ConditionChar:表示触发消息的字段类型</li></ul><h3 id="conditiontype与conditionchar的使用" tabindex="-1">ConditionType与ConditionChar的使用 <a class="header-anchor" href="#conditiontype与conditionchar的使用" aria-hidden="true">#</a></h3><p>其中，BasicModel表示基本消息字段，其可以触发的ConditionChar为TriggerId或者是TriggerPlatformId两个字段，否则会报错。 UnderLayModel为额外消息字段，其可以触发的ConditionChar可以为任意数据。</p><p>具体说明： 在SoruxBot的权限系统中，每一个Action可以绑定一个泛型节点，表示触发Action的过滤条件： 其中，在插件中使用权限节点的时候需要配置相应的泛型节点，框架会自动生成平台的特定节点。</p><p>例如：对于特性标注的Node&lt;&gt;，插件会自动生成若干Node，分别对应不同的聊天平台。这意味着账号为A的TriggerId一般只能在一个平台触发这个Action。因为我们没有理由认为不同平台的相同个体具有同样的TriggerId.</p><p>在具体进行权限过滤的同时，Action除了会根据平台生成平台特定的权限节点，还会生成特定的条件作为节点后缀，而生成后缀的过程需要显式指明插件的生成过程。</p><p>对于BasicModel类型的ConditionType，其可选值TriggerId表示判断Action过滤的条件是否为某个具体的人。对于TriggerPlatformId，表示判断Action过滤的条件是否为某个具体的群聊。</p><p>对于UnderLayModel类型的ConditionType，ConditionChar为可以在消息上下文中的UnderLayDictionary获取的字段。</p><p>因此，插件过滤的具体执行流程为：</p><p>插件开发者提供Node，框架自动根据Node生成平台特定的Node并存储，且根据Condition判断Node如何工作，比如是验证群聊还是个体。</p><h2 id="permissiondefaultconfig" tabindex="-1">PermissionDefaultConfig <a class="header-anchor" href="#permissiondefaultconfig" aria-hidden="true">#</a></h2><p>对于插件开发者而言，可能需要在插件未进行任何操作时已经对某些成员授权，这个操作被称为预授权，也就是权限的默认配置。</p><p>例如：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PermissionDefaultConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EpicMo.Example.ChatPlugins.GroupSay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Platform</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1919810114514</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>对于每一个节点，需要具有上述三个类型：</p><ul><li>Node:表示授权的节点</li><li>Platform:表示泛型节点的显示平台</li><li>授权类型，即ConditionChar的预设值</li></ul><h2 id="再看权限节点" tabindex="-1">再看权限节点 <a class="header-anchor" href="#再看权限节点" aria-hidden="true">#</a></h2><p>我们以本文的权限配置为例，可以帮助我们理解权限系统的设计。我们以<code>EpicMo.Example.ChatPlugins.GroupSay</code>为例子：</p><p>首先，我们在PermissionNode显示设置了这个节点，并且将触发条件，也就是Condition设置为TriggerId，表示我们验证的类型是触发者。</p><p>然后，我们配置了默认权限。由于Node在框架中会根据平台自动生成非泛型版本，因此我们在为一个用户授权的同时需要显示指定Node的非泛型版本，也就是Platform。此外，由于ConditionChar为TriggerId，我们需要指定一个TriggerId表示我们想要授权的对象，根据语义，这里指的是操作的个人账号，那么我们设置qq平台的qq账号即可。</p>`,38),e=[p];function t(c,r,D,i,F,y){return a(),n("div",null,e)}const A=s(l,[["render",t]]);export{d as __pageData,A as default};
